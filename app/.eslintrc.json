{
  "root": true,
  "env": {
    "browser": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:vue/essential",
    "plugin:vue/recommended",
    "plugin:vue/strongly-recommended",
    "plugin:prettier/recommended",
    "@vue/prettier",
    "@vue/typescript",
    "prettier/@typescript-eslint"
  ],
  "plugins": ["vue", "prettier"],
  "rules": {
    // --------------------------------------------------
    // 一般
    // --------------------------------------------------
    // インデント幅が2でなければLinterエラー。
    "indent": ["off", 2],
    // console.log() を本番へ許可しない
    "no-console": "warn",
    // debugger を本番へ許可しない
    "no-debugger": "error",

    // --------------------------------------------------
    // 優先度A: 必須
    // --------------------------------------------------
    // プロパティで非同期アクションを許可しない
    "vue/no-async-in-computed-properties": "error",
    // フィールド名の重複を許可しない
    "vue/no-dupe-keys": [
      "error",
      {
        "groups": []
      }
    ],
    // 属性の重複を許可しない
    "vue/no-duplicate-attributes": [
      "error",
      {
        "allowCoexistClass": true,
        "allowCoexistStyle": true
      }
    ],
    // <template>での解析エラーを許可しない
    "vue/no-parsing-error": [
      "error",
      {
        "abrupt-closing-of-empty-comment": true,
        "absence-of-digits-in-numeric-character-reference": true,
        "cdata-in-html-content": true,
        "character-reference-outside-unicode-range": true,
        "control-character-in-input-stream": true,
        "control-character-reference": true,
        "eof-before-tag-name": true,
        "eof-in-cdata": true,
        "eof-in-comment": true,
        "eof-in-tag": true,
        "incorrectly-closed-comment": true,
        "incorrectly-opened-comment": true,
        "invalid-first-character-of-tag-name": true,
        "missing-attribute-value": true,
        "missing-end-tag-name": true,
        "missing-semicolon-after-character-reference": true,
        "missing-whitespace-between-attributes": true,
        "nested-comment": true,
        "noncharacter-character-reference": true,
        "noncharacter-in-input-stream": true,
        "null-character-reference": true,
        "surrogate-character-reference": true,
        "surrogate-in-input-stream": true,
        "unexpected-character-in-attribute-name": true,
        "unexpected-character-in-unquoted-attribute-value": true,
        "unexpected-equals-sign-before-attribute-name": true,
        "unexpected-null-character": true,
        "unexpected-question-mark-instead-of-tag-name": true,
        "unexpected-solidus-in-tag": true,
        "unknown-named-character-reference": true,
        "end-tag-with-attributes": true,
        "duplicate-attribute": true,
        "end-tag-with-trailing-solidus": true,
        "non-void-html-element-start-tag-with-trailing-solidus": false,
        "x-invalid-end-tag": true,
        "x-invalid-namespace": true
      }
    ],
    // 予約済みキーの上書きを許可しない
    "vue/no-reserved-keys": [
      "error",
      {
        "reserved": [],
        "groups": []
      }
    ],
    // コンポーネントのデータプロパティを関数へ
    "vue/no-shared-component-data": "error",
    // プロパティでの副作用を許可しない
    "vue/no-side-effects-in-computed-properties": "error",
    // <template>のキー属性を許可しない
    "vue/no-template-key": "error",
    // <textarea>で `{{ }}` を許可しない
    "vue/no-textarea-mustache": "error",
    // テンプレート内で使用されていないコンポーネントの登録を禁止
    "vue/no-unused-components": [
      "error",
      {
        "ignoreWhenBindingPresent": true
      }
    ],
    // v-forディレクティブまたはスコープ属性の未使用の変数定義を許可しない
    "vue/no-unused-vars": ["error"],
    // v-forと同じ要素でv-ifの使用を許可しない
    "vue/no-use-v-if-with-v-for": [
      "error",
      {
        "allowUsingIterationVar": false
      }
    ],
    // <component>要素の `v-bind：is` 必須
    "vue/require-component-is": ["error"],
    // prop型をコンストラクター化必須
    "vue/require-prop-type-constructor": ["error"],
    // 常に値を返すようにレンダリング関数を強制
    "vue/require-render-return": ["error"],
    // v-forディレクティブで `v-bind：key` 必須
    "vue/require-v-for-key": ["error"],
    // 変数のデフォルト値を有効化
    "vue/require-valid-default-prop": ["off"],
    // プロパティ上に return ステートメントが存在することを強制
    "vue/return-in-computed-property": [
      "error",
      {
        "treatUndefinedAsUnspecified": true
      }
    ],
    // v-onではなく、@ の使用を強制
    "vue/use-v-on-exact": ["error"],
    // 有効なテンプレートルートを適用
    "vue/valid-template-root": ["error"],
    // 有効なv-bindディレクティブを適用
    "vue/valid-v-bind": ["error"],
    // 有効なv-cloakディレクティブを適用
    "vue/valid-v-cloak": ["error"],
    // 有効なv-else-ifディレクティブを適用
    "vue/valid-v-else-if": ["error"],
    // 有効なv-elseディレクティブを適用
    "vue/valid-v-else": ["error"],
    // 有効なv-forディレクティブを適用
    "vue/valid-v-for": ["error"],
    // 有効なv-htmlディレクティブを適用
    "vue/valid-v-html": ["error"],
    // 有効なv-ifディレクティブを適用
    "vue/valid-v-if": ["error"],
    // 有効なv-modelディレクティブを適用
    "vue/valid-v-model": ["error"],
    // 有効なv-onディレクティブを適用
    "vue/valid-v-on": [
      "error",
      {
        "modifiers": []
      }
    ],
    // 有効なv-onceディレクティブを適用
    "vue/valid-v-once": ["error"],
    // 有効なv-preディレクティブを適用
    "vue/valid-v-pre": ["error"],
    // 有効なv-showディレクティブを適用
    "vue/valid-v-show": ["error"],
    // 有効なv-slotディレクティブを適用
    "vue/valid-v-slot": ["error"],
    // 有効なv-textディレクティブを適用
    "vue/valid-v-text": ["error"],

    // --------------------------------------------------
    // 優先度A：必須 on Vue.js 2.x
    // --------------------------------------------------
    // コンポーネントで使用されるv-modelのカスタム修飾子を不許可
    "vue/no-custom-modifiers-on-v-model": ["off"],
    // テンプレートへの複数のルートノードの追加を許可しない
    "vue/no-multiple-template-root": ["off"],
    // カスタムコンポーネントで使用するv-modelに引数追加を不許可
    "vue/no-v-model-argument": ["off"],
    // v-bindディレクティブに有効な.sync修飾子を適用
    "vue/valid-v-bind-sync": ["off"],

    // --------------------------------------------------
    // 優先度B：強く推奨
    // --------------------------------------------------
    // テンプレートのカスタムコンポーネントに属性の命名スタイルを適用
    "vue/attribute-hyphenation": [
      "error",
      "always",
      {
        "ignore": []
      }
    ],
    // コンポーネント定義名の特定の大文字小文字を区別する
    "vue/component-definition-name-casing": ["error", "PascalCase"],
    // タグの閉じ括弧の前に改行を要求または禁止する
    "vue/html-closing-bracket-newline": [
      "error",
      {
        "singleline": "never",
        "multiline": "always"
      }
    ],
    // タグの閉じ括弧の前にスペースを必要とする、または許可しない
    "vue/html-closing-bracket-spacing": [
      "error",
      {
        "startTag": "never",
        "endTag": "never",
        "selfClosingTag": "always"
      }
    ],
    // 終了タグスタイルを適用
    "vue/html-end-tags": ["error"],
    // <template>で一貫したインデントを適用
    "vue/html-indent": [
      "error",
      2,
      {
        "attribute": 1,
        "baseIndent": 1,
        "closeBracket": 0,
        "alignAttributesVertically": true,
        "ignores": []
      }
    ],
    // HTML属性の引用スタイルを適用
    "vue/html-quotes": ["error", "double", { "avoidEscape": false }],
    // 自己終了形式 <aaa /> を強制
    "vue/html-self-closing": [
      "error",
      {
        "html": {
          "void": "never",
          "normal": "always",
          "component": "always"
        },
        "svg": "always",
        "math": "always"
      }
    ],
    // 1行あたりの属性の最大数を強制
    "vue/max-attributes-per-line": [
      "error",
      {
        "singleline": 1,
        "multiline": {
          "max": 1,
          "allowFirstLine": false
        }
      }
    ],
    // 複数行要素のコンテンツの前後に改行を強制
    "vue/multiline-html-element-content-newline": [
      "error",
      {
        "ignoreWhenEmpty": true,
        "ignores": ["VueComponent", "pre", "textarea"],
        "allowEmptyLines": false
      }
    ],
    // {{}} 補間で統一された間隔を適用
    "vue/mustache-interpolation-spacing": ["error", "always"],
    // 複数のスペースを許可しない
    "vue/no-multi-spaces": [
      "error",
      {
        "ignoreProperties": false
      }
    ],
    // 属性の等号の周りにスペースを許可しない
    "vue/no-spaces-around-equal-signs-in-attribute": ["error"],
    // 変数宣言を外部スコープで宣言されたシャドウ変数から禁止
    "vue/no-template-shadow": ["error"],
    // VueコンポーネントのProp名に特定のケーシングを適用
    "vue/prop-name-casing": ["error", "camelCase"],
    // prop値デフォルト必須化
    "vue/require-default-prop": ["error"],
    // prop値型の定義必須化
    "vue/require-prop-types": ["error"],
    // 単一行要素の内容の前後に改行必須
    "vue/singleline-html-element-content-newline": [
      "error",
      {
        "ignoreWhenNoAttributes": true,
        "ignoreWhenEmpty": true,
        "ignores": ["pre", "textarea"]
      }
    ],
    // v-bind ディレクティブスタイルを適用
    "vue/v-bind-style": ["error", "shorthand"],
    // v-on ディレクティブスタイルを適用
    "vue/v-on-style": ["error", "shorthand"],
    // v-slot ディレクティブスタイルを適用
    "vue/v-slot-style": [
      "error",
      {
        "atComponent": "v-slot",
        "default": "shorthand",
        "named": "shorthand"
      }
    ],

    // --------------------------------------------------
    // 優先度C：推奨
    // --------------------------------------------------
    // 属性の順序を強制
    "vue/attributes-order": [
      "error",
      {
        "order": [
          "DEFINITION",
          "LIST_RENDERING",
          "CONDITIONALS",
          "RENDER_MODIFIERS",
          "GLOBAL",
          "UNIQUE",
          "TWO_WAY_BINDING",
          "OTHER_DIRECTIVES",
          "OTHER_ATTR",
          "EVENTS",
          "CONTENT"
        ],
        "alphabetical": false
      }
    ],
    // コンポーネントの最上位要素の順序を強制
    "vue/component-tags-order": [
      "error",
      {
        "order": ["template", "script", "style"]
      }
    ],
    // XSS攻撃を防ぐためのv-htmlの使用を許可しない
    "vue/no-v-html": ["error"],
    // コンポーネントのプロパティの順序を強制
    "vue/order-in-components": [
      "error",
      {
        "order": [
          "el",
          "name",
          "parent",
          "functional",
          ["delimiters", "comments"],
          ["components", "directives", "filters"],
          "extends",
          "mixins",
          "inheritAttrs",
          "model",
          ["props", "propsData"],
          "fetch",
          "asyncData",
          "data",
          "computed",
          "watch",
          "LIFECYCLE_HOOKS",
          "methods",
          "head",
          ["template", "render"],
          "renderError"
        ]
      }
    ],
    // テンプレートでの this. を許可しない
    "vue/this-in-template": ["error", "never"],

    // --------------------------------------------------
    // 優先度-：未分類
    // --------------------------------------------------
    // 配列ブラケット内の間隔を一定にする
    "vue/array-bracket-spacing": ["error", "never"],
    // 関数の矢印の前後に一定の間隔を強制
    "vue/arrow-spacing": ["error", { "before": true, "after": true }],
    // ブロックを開いた後 or 閉じる前に、ブロック内のスペースを禁止または強制する
    "vue/block-spacing": ["error", "always"],
    // ブロックに一貫したブレーススタイルを適用
    "vue/brace-style": ["off"],
    // キャメルケースの命名規則を適用
    "vue/camelcase": ["off"],
    // 末尾のコンマを必須または禁止
    "vue/comma-dangle": ["error", "never"],
    // テンプレート内でのコンポーネント名の形式固定
    "vue/component-name-in-template-casing": [
      "error",
      "PascalCase",
      {
        "registeredComponentsOnly": true,
        "ignores": []
      }
    ],
    // スクリプト内でのインデント設定
    "vue/script-indent": [
      "error",
      2,
      {
        "baseIndent": 0,
        "switchCase": 0,
        "ignores": []
      }
    ],
    // 不必要な()を許可しない
    "no-extra-parens": ["error"],
    // 複数のスペースの使用を許可しない
    "no-multi-spaces": ["error"],
    // ジェネレータ関数で*の周りに間隔を強制
    "generator-star-spacing": ["off"],
    // Prettier ルール設定（.prettierrc.js）
    "prettier/prettier": ["error"]
  },
  "parser": "vue-eslint-parser",
  "parserOptions": {
    "parser": "@typescript-eslint/parser"
  },
  "overrides": [
    {
      "files": ["**/__tests__/*.{j,t}s?(x)", "**/tests/unit/**/*.spec.{j,t}s?(x)"],
      "env": {
        "jest": true
      }
    }
  ]
}
